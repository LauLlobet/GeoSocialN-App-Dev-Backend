<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.tubtale.otbackend.TreeApiTest" tests="11" skipped="0" failures="0" errors="0" timestamp="2015-06-19T09:14:24" hostname="mbaLau.local" time="248.683">
  <properties/>
  <testcase name="getV1ItemsIdShouldReturnSpecifiedTree" classname="com.tubtale.otbackend.TreeApiTest" time="212.948"/>
  <testcase name="getV1ItemsShouldReturnListOfTrees" classname="com.tubtale.otbackend.TreeApiTest" time="3.887"/>
  <testcase name="putV1ItemsShouldBePostableAndGettable" classname="com.tubtale.otbackend.TreeApiTest" time="2.458"/>
  <testcase name="v1ItemsShouldReturnStatus200" classname="com.tubtale.otbackend.TreeApiTest" time="1.331"/>
  <testcase name="putV1ItemsIdShouldSaveNewTree" classname="com.tubtale.otbackend.TreeApiTest" time="2.559"/>
  <testcase name="getTreesShouldReturnNumberOfEmptyTrees" classname="com.tubtale.otbackend.TreeApiTest" time="5.531"/>
  <testcase name="deleteV1ItemsShouldDeleteAllTrees" classname="com.tubtale.otbackend.TreeApiTest" time="1.384"/>
  <testcase name="getV1ItemsShouldReturnTypeApplicationJson" classname="com.tubtale.otbackend.TreeApiTest" time="1.173"/>
  <testcase name="puttingTreeInAFullCellShouldReturnNull" classname="com.tubtale.otbackend.TreeApiTest" time="7.475"/>
  <testcase name="getTreesShouldReturnOrderedTrees" classname="com.tubtale.otbackend.TreeApiTest" time="5.734"/>
  <testcase name="deleteV1ItemsIdShouldDeleteExistingTree" classname="com.tubtale.otbackend.TreeApiTest" time="4.198"/>
  <system-out><![CDATA[Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        tree0_.id as id1_0_0_,
        tree0_.ip as ip2_0_0_,
        tree0_.location as location3_0_0_,
        tree0_.metersToHide as metersTo4_0_0_,
        tree0_.text as text5_0_0_,
        tree0_."timestamp" as timestam6_0_0_ 
    from
        Tree tree0_ 
    where
        tree0_.id=?
long2.0 lat:2.0 minlong:2.0 minlat2.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(2.0, 2.0, 2.0001, 2.0001, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(2.0, 2.0, 2.0001, 2.0001, 4326) 
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(3.0 7.0)',
        4326)) limit 7
long3.0 lat:7.0 minlong:3.0 minlat7.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(3.0, 7.0, 3.0001, 7.0001, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(3.0, 7.0, 3.0001, 7.0001, 4326) 
Hibernate: 
    delete 
    from
        Tree
long0.0 lat:0.0 minlong:0.0 minlat0.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(0.0, 0.0, 1.0E-4, 1.0E-4, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(0.0, 0.0, 1.0E-4, 1.0E-4, 4326) 
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        tree0_.id as id1_0_0_,
        tree0_.ip as ip2_0_0_,
        tree0_.location as location3_0_0_,
        tree0_.metersToHide as metersTo4_0_0_,
        tree0_.text as text5_0_0_,
        tree0_."timestamp" as timestam6_0_0_ 
    from
        Tree tree0_ 
    where
        tree0_.id=?
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(0.0 0.0)',
        4326)) limit 7
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(0.0 0.0)',
        4326)) limit 7
long0.0 lat:0.0 minlong:0.0 minlat0.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(0.0, 0.0, 1.0E-4, 1.0E-4, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(0.0, 0.0, 1.0E-4, 1.0E-4, 4326) 
Hibernate: 
    delete 
    from
        Tree
long2.0 lat:2.0 minlong:2.0 minlat2.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(2.0, 2.0, 2.0001, 2.0001, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(2.0, 2.0, 2.0001, 2.0001, 4326) 
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        tree0_.id as id1_0_0_,
        tree0_.ip as ip2_0_0_,
        tree0_.location as location3_0_0_,
        tree0_.metersToHide as metersTo4_0_0_,
        tree0_.text as text5_0_0_,
        tree0_."timestamp" as timestam6_0_0_ 
    from
        Tree tree0_ 
    where
        tree0_.id=?
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(0.0 0.0)',
        4326)) limit 7
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(1.399999976158142 45.0000114440918)',
        4326)) limit 7
long1.4 lat:45.00001 minlong:1.4 minlat45.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(1.4, 45.0, 1.400099976158142, 45.0001, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(1.4, 45.0, 1.400099976158142, 45.0001, 4326) 
Hibernate: 
    delete 
    from
        Tree
deleting ALL trees
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(0.0 0.0)',
        4326)) limit 7
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(0.0 0.0)',
        4326)) limit 7
long0.0 lat:0.0 minlong:0.0 minlat0.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(0.0, 0.0, 1.0E-4, 1.0E-4, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(0.0, 0.0, 1.0E-4, 1.0E-4, 4326) 
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(1.4000500440597534 45.00006866455078)',
        4326)) limit 7
long1.40005 lat:45.00007 minlong:1.4 minlat45.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(1.4, 45.0, 1.400099976158142, 45.0001, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(1.4, 45.0, 1.400099976158142, 45.0001, 4326) 
long1.40005 lat:45.00007 minlong:1.4 minlat45.0
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(1.4, 45.0, 1.400099976158142, 45.0001, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(1.4, 45.0, 1.400099976158142, 45.0001, 4326) 
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(1.2050000429153442 38.66999816894531)',
        4326)) limit 7
long1.205 lat:38.67 minlong:1.205 minlat38.6699
SELECT COUNT(*)FROM Tree WHERE Tree.location && ST_MakeEnvelope(1.205, 38.6699, 1.2051000429153442, 38.66999898681641, 4326) 
Hibernate: 
    SELECT
        COUNT(*)
    FROM
        Tree 
    WHERE
        Tree.location && ST_MakeEnvelope(1.205, 38.6699, 1.2051000429153442, 38.66999898681641, 4326) 
Hibernate: 
    delete 
    from
        Tree
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        nextval ('hibernate_sequence')
Hibernate: 
    insert 
    into
        Tree
        (ip, location, metersToHide, text, "timestamp", id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        tree0_.id as id1_0_0_,
        tree0_.ip as ip2_0_0_,
        tree0_.location as location3_0_0_,
        tree0_.metersToHide as metersTo4_0_0_,
        tree0_.text as text5_0_0_,
        tree0_."timestamp" as timestam6_0_0_ 
    from
        Tree tree0_ 
    where
        tree0_.id=?
Hibernate: 
    delete 
    from
        Tree 
    where
        id=1058
Hibernate: 
    SELECT
        * 
    FROM
        Tree 
    ORDER BY
        ST_Distance(Tree.location,
        ST_Geomfromtext('POINT(0.0 0.0)',
        4326)) limit 7
Hibernate: 
    delete 
    from
        Tree
]]></system-out>
  <system-err><![CDATA[de juny 19, 2015 11:14:22 AM org.glassfish.jersey.server.ApplicationHandler initialize
INFO: Initiating Jersey application, version Jersey: 2.7 2014-03-12 18:11:31...
de juny 19, 2015 11:14:24 AM org.glassfish.grizzly.http.server.NetworkListener start
INFO: Started listener bound to [localhost:8080]
de juny 19, 2015 11:14:24 AM org.glassfish.grizzly.http.server.HttpServer start
INFO: [HttpServer] Started.
de juny 19, 2015 11:14:25 AM org.hibernate.jpa.internal.util.LogHelper logPersistenceUnitInformation
INFO: HHH000204: Processing PersistenceUnitInfo [
	name: org.hibernate.events.jpa
	...]
de juny 19, 2015 11:14:25 AM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {5.0.0.CR1}
de juny 19, 2015 11:14:25 AM org.hibernate.cfg.Environment <clinit>
INFO: HHH000206: hibernate.properties not found
de juny 19, 2015 11:14:25 AM org.hibernate.cfg.Environment buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : javassist
de juny 19, 2015 11:14:25 AM org.hibernate.spatial.integration.SpatialService <init>
INFO: HHH80000001: hibernate-spatial integration enabled : true
de juny 19, 2015 11:14:25 AM org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>
INFO: HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
de juny 19, 2015 11:14:26 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH000402: Using Hibernate built-in connection pool (not for production use!)
de juny 19, 2015 11:14:26 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://52.26.137.110:5432/ourtree?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory]
de juny 19, 2015 11:14:26 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH000046: Connection properties: {user=ourtree, password=****}
de juny 19, 2015 11:14:26 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH000006: Autocommit mode: false
de juny 19, 2015 11:14:26 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 5 (min=1)
de juny 19, 2015 11:14:28 AM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
de juny 19, 2015 11:17:47 AM org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl useContextualLobCreation
INFO: HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
de juny 19, 2015 11:17:47 AM org.hibernate.type.BasicTypeRegistry register
INFO: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@260a1e5d
de juny 19, 2015 11:17:48 AM org.hibernate.tool.hbm2ddl.SchemaUpdate execute
INFO: HHH000228: Running hbm2ddl schema update
de juny 19, 2015 11:17:56 AM org.hibernate.hql.internal.QueryTranslatorFactoryInitiator initiateService
INFO: HHH000397: Using ASTQueryTranslatorFactory
]]></system-err>
</testsuite>
